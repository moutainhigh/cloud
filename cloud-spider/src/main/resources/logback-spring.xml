<?xml version="1.0" encoding="UTF-8"?>
<!--
    trace < debug < info < warn < error < fatal
scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="false" debug="false">
    <springProperty scop="context" name="spring.application.name" source="spring.application.name" defaultValue="logs"/>
    <property name="log.path" value="logs/${spring.application.name}"/>
    <property name="APPENDER_ENCODER_PATTERN"
              value="%yellow(%date{MM-dd HH:mm:ss.SSS}) |%highlight(%-5level) |%blue(%thread) |%blue(%logger{50}:%line) |%cyan(%msg%n)"/>
    <!-- Console log output -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${APPENDER_ENCODER_PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- Log file debug output -->
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/%d{yyyy-MM}/debug.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${APPENDER_ENCODER_PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- Log file error output -->
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/%d{yyyy-MM}/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${APPENDER_ENCODER_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!-- 开发环境 -->
    <springProfile name="default,dev,test">
        <logger name="com.smart4y.cloud" level="debug"/>
        <logger name="org.springframework.amqp" level="info"/>
        <logger name="com.alibaba.nacos.client.naming" level="warn"/>
        <logger name="org.mybatis.spring.mapper.ClassPathMapperScanner" level="info"/>
        <logger name="org.springframework.boot.actuate.endpoint.EndpointId" level="info"/>

        <root level="info">
            <appender-ref ref="console"/>
            <appender-ref ref="debug"/>
            <appender-ref ref="error"/>
        </root>
    </springProfile>
    <!-- 生产环境 -->
    <springProfile name="online,docker">
        <logger name="com.smart4y.cloud" level="info"/>
        <logger name="org.springframework.amqp" level="warn"/>
        <logger name="com.alibaba.nacos.client.naming" level="warn"/>
        <logger name="org.mybatis.spring.mapper.ClassPathMapperScanner" level="warn"/>
        <logger name="org.springframework.boot.actuate.endpoint.EndpointId" level="warn"/>

        <root level="info">
            <appender-ref ref="console"/>
            <appender-ref ref="debug"/>
            <appender-ref ref="error"/>
        </root>
    </springProfile>
</configuration>