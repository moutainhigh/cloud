version: '3.2'

services:
  es1:
    image: local-es-cluster:latest
    container_name: "local-es-cluster-1"
    build:
      context: elasticsearch
      dockerfile: Dockerfile
    networks:
      - cloud
    ports:
      - "9202:9200"
      - "9302:9300"
    restart: always
    environment:
      - "TZ=Asia/Shanghai"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "node.name=es1"
      - "discovery.seed_hosts=es2"
      - "cluster.initial_master_nodes=es1,es2"
    volumes:
      - ./elasticsearch/config:/usr/share/elasticsearch/config
      - local-es-cluster-1-data:/usr/share/elasticsearch/data
  es2:
    image: local-es-cluster:latest
    container_name: "local-es-cluster-2"
    build:
      context: elasticsearch
      dockerfile: Dockerfile
    networks:
      - cloud
    restart: always
    environment:
      - "TZ=Asia/Shanghai"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "node.name=es2"
      - "discovery.seed_hosts=es1"
      - "cluster.initial_master_nodes=es1,es2"
    volumes:
      - ./elasticsearch/config:/usr/share/elasticsearch/config
      - local-es-cluster-2-data:/usr/share/elasticsearch/data
  logstash:
    image: local-elk-logstash:latest
    container_name: "local-elk-logstash"
    build:
      context: logstash
      dockerfile: Dockerfile
    networks:
      - cloud
    ports:
      - "12201:12201/udp"
    depends_on:
      - es1
    restart: always
    environment:
      - "TZ=Asia/Shanghai"
      - "LS_JAVA_OPTS=-Xms1024m -Xmx1024m"
  kibana:
    image: local-elk-kibana:latest
    container_name: "local-elk-kibana"
    build:
      context: kibana
      dockerfile: Dockerfile
    networks:
      - cloud
    ports:
      - "5601:5601"
    depends_on:
      - es1
    restart: always
    environment:
      - "TZ=Asia/Shanghai"
  redis:
    image: local-elk-redis:latest
    container_name: "local-elk-redis"
    build:
      context: redis
      dockerfile: Dockerfile
    networks:
      - cloud
    ports:
      - "6379:6379"
    restart: always
    environment:
      - "TZ=Asia/Shanghai"
    volumes:
      - redis-data:/data

networks:
  cloud:
    driver: bridge

volumes:
  local-es-cluster-1-data:
    driver: local
  local-es-cluster-2-data:
    driver: local
  redis-data:
    driver: local